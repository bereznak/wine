<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/26/2017 5:19:24 PM"
  DTS:CreationName=""
  DTS:CreatorComputerName="BREZVM01"
  DTS:CreatorName="BREZVM01\brez"
  DTS:DTSID="{0DCFE87F-6F9C-42CD-A019-7C85E55F204B}"
  DTS:ExecutableType=""
  DTS:LastModifiedProductVersion="14.0.0800.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="Load_Sheet_Data"
  DTS:PackageType="5"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{BAC0972B-19E4-47FC-AB9B-7B31E0670E3D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[bereznak81.database.windows.net.wine.bereznak]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{15A1B582-1633-4FA0-90AA-35E5E95843C2}"
      DTS:ObjectName="bereznak81.database.windows.net.wine.bereznak">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=bereznak81.database.windows.net;User ID=bereznak;Initial Catalog=wine;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAKtkDavKUP0m0SpKDyf2ihgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACQ+o34+sweqDeUKtluJIp1MxPoXufw9s2zNpBf2WE6mwAAAAAOgAAAAAIAACAAAABxargz7RWgJzYWbbeGWSOdwifGDae4nbZE7/tFERR3fCAAAADjXppJoTI4AQy5QJAf90aliFOV/IACatnAOR443Cfxd0AAAACKnrZ/yrAD49WaYCHjAzUvxgRVMxtZ+gKH6+UKCAJvzfybjQrOs6zywm1E2JvaP/t7Bpar3p43fOvRsN7TUAqZ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Sheets Data from Winemaking2017"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9F5113B8-CCE0-445D-8CA6-848E86B7DBE8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Sheets Data from Winemaking2017"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Batches]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[bereznak81.database.windows.net.wine.bereznak]"
                  connectionManagerRefId="Package.ConnectionManagers[bereznak81.database.windows.net.wine.bereznak]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[type]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="type"
                      externalMetadataColumnId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[type]" />
                    <inputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[datestart]"
                      cachedDataType="date"
                      cachedName="datestart"
                      externalMetadataColumnId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[datestart]"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[datestart]" />
                    <inputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[variety]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="variety"
                      externalMetadataColumnId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[variety]"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[variety]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[variety]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="variety" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[datestart]"
                      dataType="dbDate"
                      name="datestart" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="type" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Qty]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Qty" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Yield]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Yield" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SGo]"
                      dataType="numeric"
                      name="SGo"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SGadj]"
                      dataType="numeric"
                      name="SGadj"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Brix]"
                      dataType="numeric"
                      name="Brix"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[pH]"
                      dataType="numeric"
                      name="pH"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TA]"
                      dataType="numeric"
                      name="TA"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Yeast]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Yeast" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[pitchtime]"
                      dataType="dbTimeStamp"
                      name="pitchtime" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SGf]"
                      dataType="numeric"
                      name="SGf"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[abv]"
                      dataType="numeric"
                      name="abv"
                      precision="18" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Sheets Data from Winemaking2017\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Data;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Google.GData.Client;
using Google.GData.Extensions;
using Google.GData.Spreadsheets;
using Google.Apis.Auth.OAuth2;
using System.Security.Cryptography.X509Certificates;

using System.IO;
using System.Windows.Forms;

//namespace GoogleSpreadsheet
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        
        //In the old api, this accessed the main api accounts' sheets, not anymore
        //** Important ** share spreadsheets with the Service Account by inviting the "serviceAccountEmail" address to the sheet
        string serviceAccountEmail = "wine-svc@wine-181220.iam.gserviceaccount.com";

        var certificate = new X509Certificate2(@"key.p12", "notasecret", X509KeyStorageFlags.Exportable);

        ServiceAccountCredential credential = new ServiceAccountCredential(
           new ServiceAccountCredential.Initializer(serviceAccountEmail)
           {
               Scopes = new[] { "https://spreadsheets.google.com/feeds", "https://docs.google.com/feeds" }
           }.FromCertificate(certificate));


        //service = new SpreadsheetsService("ETL Pull");
        ////Username and password
        //service.setUserCredentials("someone@google.com", "*******");
        ////your spreadsheet key goes in next line
        //query = new WorksheetQuery("0Algddiszrz0mdFo0akcwbEhFVVhIaGRFX3M4MF84LWc", "private", "full");
        //feed = service.Query(query);
        //sheet = feed.Entries[0];
        //link = sheet.Links.FindService(GDataSpreadsheetsNameTable.ListRel, null);
        //listQuery = new ListQuery(link.HRef.ToString());
        //listFeed = service.Query(listQuery);
    }

    //    SpreadsheetsService service;
    //    WorksheetQuery query;
    //    WorksheetFeed feed;
    //    AtomEntry sheet;
    //    AtomLink link;
    //    ListQuery listQuery;
    //    ListFeed listFeed;
    //    public override void PreExecute()
    //    {
    //        base.PreExecute();
    //        //service = new SpreadsheetsService("ETL Pull");
    //        ////Username and password
    //        //service.setUserCredentials("someone@google.com", "*******");
    //        ////your spreadsheet key goes in next line
    //        //query = new WorksheetQuery("0Algddiszrz0mdFo0akcwbEhFVVhIaGRFX3M4MF84LWc", "private", "full");
    //        //feed = service.Query(query);
    //        //sheet = feed.Entries[0];
    //        //link = sheet.Links.FindService(GDataSpreadsheetsNameTable.ListRel, null);
    //        //listQuery = new ListQuery(link.HRef.ToString());
    //        //listFeed = service.Query(listQuery);
    //}
    //public override void PostExecute()
    //{
    //    base.PostExecute();
    //}
    //public override void CreateNewOutputRows()
    //{
    //    foreach (ListEntry row in listFeed.Entries)
    //    {
    //        if (row.Elements[0].Value == "") break;
    //        Output0Buffer.AddRow();
    //        Output0Buffer.variety = row.Elements[0].Value;
    //        Output0Buffer.datestart = DateTime.Parse(row.Elements[1].Value);
    //        Output0Buffer.type = row.Elements[2].Value;
    //    }
    //}

    public override void PostExecute()
    {
        base.PostExecute();
    }

    public class OAuthTest
    {
        OAuth2Parameters param = new OAuth2Parameters();

        public OAuthTest()
        {
            Console.WriteLine("Calling: AuthGoogleDataInterface()");
            bool init = AuthGoogleDataInterface();
            if (init)
            {
                GOAuth2RequestFactory requestFactory = new GOAuth2RequestFactory(null, "My App User Agent", this.param);
                //requestFactory.CustomHeaders.Add(string.Format("Authorization: Bearer {0}", credential.Token.AccessToken));
                var service = new SpreadsheetsService("MyService");
                service.RequestFactory = requestFactory;
                SpreadsheetQuery query = new SpreadsheetQuery();

                // Make a request to the API and get all spreadsheets.
                SpreadsheetFeed feed = service.Query(query);

                // Iterate through all of the spreadsheets returned
                foreach (SpreadsheetEntry entry in feed.Entries)
                {
                    // Print the title of this spreadsheet to the screen
                    Console.WriteLine(entry.Title.Text);
                }
            }
            //Console.WriteLine(m_Init);
        }

        private bool AuthGoogleDataInterface()
        {
            bool b_success;
            try
            {
                Console.WriteLine("New User Credential");
                // New User Credential
                UserCredential credential;
                using (var stream = new FileStream("client_secrets.json", FileMode.Open, FileAccess.Read))
                {
                    GoogleClientSecrets GCSecrets = GoogleClientSecrets.Load(stream);
                    string[] ArrScope = new[] { "https://spreadsheets.google.com/feeds", "https://docs.google.com/feeds" };
                    //credential = GoogleWebAuthorizationBroker.AuthorizeAsync(
                    //    GCSecrets.Secrets,
                    //    ArrScope,
                    //    "user", CancellationToken.None,
                    //new FileDataStore("My.cal")).Result;  // needs some assembly
                    // put the Information generated for the credentials object into the OAuth2Parameters-Object to access the Spreadsheets
                   // this.param.ClientId = GCSecrets.Secrets.ClientId; //CLIENT_ID;
                    //this.param.ClientSecret = GCSecrets.Secrets.ClientSecret; //CLIENT_SECRET;
                    //this.param.RedirectUri = "urn:ietf:wg:oauth:2.0:oob"; //REDIRECT_URI;
                    //this.param.Scope = ArrScope.ToString();
                    //this.param.AccessToken = credential.Token.AccessToken;
                    //this.param.RefreshToken = credential.Token.RefreshToken;
                }

                Console.WriteLine("AuthGoogleDataInterface: Success");
                b_success = true;
            }
            catch (Exception e)
            {
                Console.WriteLine(e.ToString());
                b_success = false;
            }
            return b_success;
        }
    }
}

]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_098c93ea13d74473a6f47677cbb5521b.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{80EE3249-8007-4D1E-BA47-74ABD452086D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_098c93ea13d74473a6f47677cbb5521b</RootNamespace>
    <AssemblyName>SC_098c93ea13d74473a6f47677cbb5521b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Google.Apis">
      <HintPath>C:\Users\brez\.nuget\packages\Google.Apis\1.29.1\lib\net45\Google.Apis.dll</HintPath>
    </Reference>
    <Reference Include="Google.Apis.Auth, Version=1.29.1.0, Culture=neutral, PublicKeyToken=4b01fa6e34db77ab, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\brez\.nuget\packages\Google.Apis.Auth\1.29.1\lib\net45\Google.Apis.Auth.dll</HintPath>
    </Reference>
    <Reference Include="Google.Apis.Core, Version=1.29.1.0, Culture=neutral, PublicKeyToken=4b01fa6e34db77ab, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\brez\.nuget\packages\Google.Apis.Core\1.29.1\lib\net45\Google.Apis.Core.dll</HintPath>
    </Reference>
    <Reference Include="Google.GData.Client, Version=2.2.0.0, Culture=neutral, PublicKeyToken=04a59ca9b0273830, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Google\Google Data API SDK\Redist\Google.GData.Client.dll</HintPath>
    </Reference>
    <Reference Include="Google.GData.Extensions, Version=2.2.0.0, Culture=neutral, PublicKeyToken=0b4c5df2ebf20876, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Google\Google Data API SDK\Redist\Google.GData.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="Google.GData.Spreadsheets, Version=2.2.0.0, Culture=neutral, PublicKeyToken=3f77feb76ff0d9a1, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Google\Google Data API SDK\Redist\Google.GData.Spreadsheets.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\brez\.nuget\packages\Newtonsoft.Json\10.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String type
    {
        set
        {
            this[0] = value;
        }
    }
    public bool type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime datestart
    {
        set
        {
            this[1] = value;
        }
    }
    public bool datestart_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String variety
    {
        set
        {
            this[2] = value;
        }
    }
    public bool variety_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Settings.get_Default():SC_098c93ea13d74473a6f47677cbb5521b.Properties.Sett" +
    "ings")]

namespace SC_098c93ea13d74473a6f47677cbb5521b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_098c93ea13d74473a6f47677cbb5521b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_098c93ea13d74473a6f47677cbb5521b</msb:DisplayName>
		<msb:ProjectId>{8B462489-8D83-404F-8AC9-986252F95DA0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_098c93ea13d74473a6f47677cbb5521b.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:Breakpoint Include="53c964b89e6c49619732db8c0fe7e0e2">
			<msb:FileName>main.cs</msb:FileName>
			<msb:LineNumber>28</msb:LineNumber>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_098c93ea13d74473a6f47677cbb5521b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_098c93ea13d74473a6f47677cbb5521b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_098c93ea13d74473a6f47677cbb5521b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_098c93ea13d74473a6f47677cbb5521b.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACpYzVkAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAjjwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADw8AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAEOwAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
PAAAAAAAAEgAAAACAAUAjCMAAMAWAAABAAAAAAAAAEw6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQBMAAAAAQAAEQIoEAAACnIBAABwclsAAHByawAAcBpz
EQAACgpzEgAACgsHGI0mAAABJRZygQAAcKIlF3LNAABwom8TAAAKBwZvFAAACnMVAAAKJioeAigW
AAAKKh4CKA4AAAYqKgIDBAUoFwAACiomAhYDKBgAAAoqWgMsCAIWKBkAAAoqcgkBAHBzGgAACno6
AhcDjBwAAAEoGAAACipaAywIAhcoGQAACipyCQEAcHMaAAAKeiYCGAMoGAAACipaAywIAhgoGQAA
CipyCQEAcHMaAAAKeh4CKBsAAAoqHgIoHAAACioeAigdAAAKKn4CKB4AAAoCAnMTAAAGfQEAAAQC
AnMUAAAGfQIAAAQqBipuAnsDAAAELBICewMAAARvDAAABgIUfQMAAAQqAAAAEzAFAEkAAAACAAAR
FgorLgQGlA4EcqYBAHAoHwAACjMZAgUGmgIEBpQoIAAACg4EcwQAAAZ9AwAABAYXWAoGAzLOAm8S
AAAGAm8PAAAGAigQAAAGKjoCKCEAAAoCA30EAAAEKjoCKCEAAAoCA30FAAAEKh4CKCEAAAoqrn4G
AAAELR5yuAEAcNAHAAACKCIAAApvIwAACnMkAAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAABCoa
fggAAAQqHgIoJQAACioucxoAAAaACAAABCoAAAAbMAMAjgAAAAMAABECcyYAAAp9CQAABAIoIQAA
CnIqAgBwKCcAAAoCKB0AAAYsahRycAIAcAJ7CQAABHMoAAAKCnKUAgBwcykAAAolBm8qAAAKcysA
AAoLB28sAAAKby0AAApvLgAACgwrGghvLwAACnQ0AAABbzAAAApvMQAACignAAAKCG8yAAAKLd7e
CggsBghvMwAACtwqAAABEAAAAgBdACaDAAoAAAAAGzAEAF8AAAAEAAARcqgCAHAoJwAACnLQAgBw
GRdzNAAACgsHKDUAAAomGI0mAAABJRZygQAAcKIlF3LNAABwoibeCgcsBgdvMwAACtxy+AIAcCgn
AAAKFwreDm82AAAKKCcAAAoWCt4ABioAARwAAAIAFwAgNwAKAAAAAAAAAABPTwAOGAAAAUJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQHAAAjfgAAwAcAAFwJAAAjU3RyaW5ncwAA
AAAcEQAAPAMAACNVUwBYFAAAEAAAACNHVUlEAAAAaBQAAFgCAAAjQmxvYgAAAAAAAAACAAABVxWi
CQkDAAAA+gEzABYAAAEAAAA7AAAACQAAAAkAAAAdAAAAEAAAADYAAAAQAAAABAAAAAMAAAAJAAAA
CgAAAAIAAAABAAAABwAAAAEAAAABAAAAAABIBAEAAAAAAAYAFgMEBgYAqgMEBgYAYgLxBQ8AeAYA
AAYAjwISBQYA+QISBQYA2gISBQYAkQMSBQYANgMSBQYATwMSBQYApgISBQYAwQLlAwoAagOOAQ4A
MgDXBhIAGQRDAD8AtAUAAAYA2gfKBBYAbgcOCBYA9QgOCBoA5AiKBwYAJACnABYAMwkOCAYAsARw
AAYASAXKBAoAkwWOAR4AhAWOAQoAXgWOAQYAewHKBAoAQAiOAQYARQLxBQYApAUkBgYAUgX9BA4A
FQIyBA4AdgIyBA4A5QHoBAYAKgIEBgYAKgfXBgYAAQTKBAYAAQCnAAYAOAXKBAYArwHKBAYARQHK
BAYA2wgSBQYAaQHKBBoADAGKBxYAGAEOCBYAHgkOCBoA0ACKBxYAxwAOCBYAJAUOCBYADwAOCBoA
PQmKBxYA4QcOCAYAwAVHBwYAOQHKBAYAMAFwAAYAfwdwABIApAdDAAYAtARwAAAAAABbAAAAAAAB
AAEAAQAQAN0EAAAQAAEAAQABABAAdgUAAGUAAQAEAAEAEAAiCAAAdQABAA4AAQAQAFoHAABFAAQA
EwABABAAwgYAAEUABQAUAAAAEAArBpMGRQAGABUAAAEQAD4HkwaNAAgAGQACABAAhwgAAEUACQAc
AAYAWgccAQYAwgYgAQYAdgUkAQEAMAgoAQEAMAgoAREA0QQsAREA1QEwAREAIAE1AQEAuwQ5AVAg
AAAAAMYAyAMGAAEAqCAAAAAAxgDTAwYAAQCwIAAAAACGGNoFBgABALggAAAAAIYY2gVDAAEAwyAA
AAAAhgi0ARAABADNIAAAAACGCHAEPQEFAOQgAAAAAIYIeQhCAQYA8yAAAAAAhgiABD0BBwAKIQAA
AACGCE4JEAAIABQhAAAAAIYIlQQ9AQkAKyEAAAAAhgDQCAYACgAzIQAAAACGAPMHBgAKADshAAAA
AIYA9gdTAAoAQyEAAAAAhhjaBQYACgBjIQAAAADGAbgHBgAKAGUhAAAAAIEA4AAGAAoAhCEAAAAA
xgCyCEgBCgBjIQAAAADGAcYHBgAOANkhAAAAAIYY2gVUAQ4A6CEAAAAAhhjaBVQBDwD3IQAAAACD
GNoFBgAQAP8hAAAAAJMIoAVaARAAKyIAAAAAkwi9AV8BEAAyIgAAAACTCMkBZQEQADoiAAAAAJYI
AghsAREAQSIAAAAAhhjaBQYAEQBJIgAAAACRGOAFcQERAFgiAAAAAIYY2gUGABEABCMAAAAAgQD0
AFMAEQAAAAEAmQUAAAIABQcAAAMAbAUAAAEA3wMAAAEA3wMAAAEA3wMAAAEA3wMAAAEA3wMAAAEA
3wMAAAEAvgcAAAIA5wUAAAMAZgcAAAQAbAUAAAEARggAAAEARggAAAEA3wMJANoFAQARANoFBgAZ
ANoFCgApANoFEAAxANoFEAA5ANoFEABBANoFEABJANoFEABRANoFEABZANoFEABhANoFEABpANoF
BgDxANoFBgARAdoFFQAhAdoFBgDpAMgDBgBxANoFIwCBANoFEACBAMwGLACBAAUCNgB5ANoFPQDp
ANMDBgDJANoFQwDJAMEETQDJAKgEAQBBAdoFEADJANAIBgDJAPMHBgDJAPYHUwDpANoFBgDpAGQA
WwDpABkHYgCJANoFBgBJAVcBaABJAdcIcQD5ANoFdwAZAdoFBgCRANoFBgBhAYQBjACZANoFkQBp
AdoFEABxAQsJmQChANoFBgBpAe8IoACJAYcGqAAMAMwFtgAUAFAIxgCxAHEBywCpAccI0QCxAb4I
UwC5Af0BBgC5ANoF2wDRAcIA5gCJAP8D0QAuAAsAkgEuABMAmwEuABsAugEuACMAwwEuACsA7AEu
ADMA7AEuADsA7AEuAEMAwwEuAEsA8gEuAFMA7AEuAFsACQJDAGMAUwLjAGsAUwLpAHMAugEBAXsA
UwIJAXMAugEcAFcAfwDVAAMAAQAHAAcACAAJAAAAuAF1AQAAdAR5AQAAfQh9AQAAhAR5AQAAUgl1
AQAAmQR5AQAApAWCAQAA3QGHAQAABgiNAQEABQADAAEABgAFAAEABwAHAAEACAAJAAEACQALAAEA
CgANAAIAFgAPAAIAFwARAAEAGAARAAIAGQATAK4AvwAEgAAAAQAAAAAAAAAAAAAAAAB6AAAABAAA
AAAAAAAAAAAA7wCeAAAAAAAOAAAAAAAAAAAAAAD4AFwIAAAAAAQAAAAAAAAAAAAAAO8AygQAAAAA
AQAdAAEAAAAAAAAAAQEIBAAAAAACAAIAAAAAAAAAAAAKAQ4IAAAAAAIAAgAAAAAAAAAAABMBigcA
AAAADgAAAAAAAAAAAAAA+ACRCAAAAAAAAAAAAQAAADUGAAAJAAIAAAAASUVudW1lcmFibGVgMQBB
dG9tQ29sbGVjdGlvbkJhc2VgMQBJRW51bWVyYXRvcmAxAFg1MDlDZXJ0aWZpY2F0ZTIAR29vZ2xl
LkFwaXMuQXV0aC5PQXV0aDIAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAFNDXzA5OGM5
M2VhMTNkNzQ0NzNhNmY0NzY3N2NiYjU1MjFiAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAExvYWQAQXRvbUZlZWQAU3ByZWFkc2hlZXRGZWVkAE1hcmtPdXRwdXRzRmluaXNoZWQA
QXV0aEdvb2dsZURhdGFJbnRlcmZhY2UAU3ByZWFkc2hlZXRzU2VydmljZQBkZWZhdWx0SW5zdGFu
Y2UARmlsZU1vZGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQ29uc29sZQBnZXRfVGl0bGUARGF0ZVRpbWUAV3JpdGVMaW5lAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlBpcGVsaW5lAFR5cGUAc2V0X3R5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARnJvbUNlcnRpZmlj
YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBHb29nbGUuQXBp
cy5BdXRoAFNlcnZpY2VBY2NvdW50Q3JlZGVudGlhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0Nf
MDk4YzkzZWExM2Q3NDQ3M2E2ZjQ3Njc3Y2JiNTUyMWIuZGxsAHNldF90eXBlX0lzTnVsbABzZXRf
ZGF0ZXN0YXJ0X0lzTnVsbABzZXRfdmFyaWV0eV9Jc051bGwAU2V0TnVsbABGaWxlU3RyZWFtAHBh
cmFtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEF0b21FbnRyeUNv
bGxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAEluaXRpYWxpemVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IA
LmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzA5OGM5M2VhMTNkNzQ0NzNhNmY0
NzY3N2NiYjU1MjFiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBnZXRfRW50cmllcwBTQ18wOThjOTNlYTEzZDc0NDczYTZmNDc2NzdjYmI1NTIxYi5Qcm9wZXJ0
aWVzAFZhcmlhYmxlcwBzZXRfU2NvcGVzAFN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuWDUw
OUNlcnRpZmljYXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAWDUwOUtl
eVN0b3JhZ2VGbGFncwBTZXR0aW5ncwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAQnVm
ZmVycwBPQXV0aDJQYXJhbWV0ZXJzAEZpbGVBY2Nlc3MAR29vZ2xlLkdEYXRhLlNwcmVhZHNoZWV0
cwBHb29nbGVDbGllbnRTZWNyZXRzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBP
YmplY3QAQXRvbVRleHRDb25zdHJ1Y3QAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAR29vZ2xl
LkdEYXRhLkNsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQAZ2V0X0N1cnJlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABzZXRfZGF0ZXN0YXJ0
AE9BdXRoVGVzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABN
b3ZlTmV4dABnZXRfVGV4dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AFNwcmVhZHNoZWV0UXVlcnkAR09B
dXRoMlJlcXVlc3RGYWN0b3J5AHNldF9SZXF1ZXN0RmFjdG9yeQBJR0RhdGFSZXF1ZXN0RmFjdG9y
eQBBdG9tRW50cnkAU3ByZWFkc2hlZXRFbnRyeQBzZXRfdmFyaWV0eQAAAABZdwBpAG4AZQAtAHMA
dgBjAEAAdwBpAG4AZQAtADEAOAAxADIAMgAwAC4AaQBhAG0ALgBnAHMAZQByAHYAaQBjAGUAYQBj
AGMAbwB1AG4AdAAuAGMAbwBtAAEPawBlAHkALgBwADEAMgAAFW4AbwB0AGEAcwBlAGMAcgBlAHQA
AEtoAHQAdABwAHMAOgAvAC8AcwBwAHIAZQBhAGQAcwBoAGUAZQB0AHMALgBnAG8AbwBnAGwAZQAu
AGMAbwBtAC8AZgBlAGUAZABzAAA7aAB0AHQAcABzADoALwAvAGQAbwBjAHMALgBnAG8AbwBnAGwA
ZQAuAGMAbwBtAC8AZgBlAGUAZABzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAA
YwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBn
AG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQA
ZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAcVMAQwBfADAAOQA4AGMAOQAzAGUAYQAxADMAZAA3
ADQANAA3ADMAYQA2AGYANAA3ADYANwA3AGMAYgBiADUANQAyADEAYgAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAARUMAYQBsAGwAaQBuAGcAOgAgAEEAdQB0AGgARwBv
AG8AZwBsAGUARABhAHQAYQBJAG4AdABlAHIAZgBhAGMAZQAoACkAACNNAHkAIABBAHAAcAAgAFUA
cwBlAHIAIABBAGcAZQBuAHQAABNNAHkAUwBlAHIAdgBpAGMAZQAAJ04AZQB3ACAAVQBzAGUAcgAg
AEMAcgBlAGQAZQBuAHQAaQBhAGwAACdjAGwAaQBlAG4AdABfAHMAZQBjAHIAZQB0AHMALgBqAHMA
bwBuAABBQQB1AHQAaABHAG8AbwBnAGwAZQBEAGEAdABhAEkAbgB0AGUAcgBmAGEAYwBlADoAIABT
AHUAYwBjAGUAcwBzAAAAAEtqNOE2vlRNh9EFW/2yX6gABCABAQgDIAABBSABARERBCABAQ4GIAEB
EYCFBgcCEjkSQQggAwEODhGAlQkgAQEVEoCdAQ4GIAESQRI5BSABARJBCSADARJpHQgSbQUgAgEI
HAMgAAIDBwEIBgACCBJtDgUgAR0ICAgAARKApRGAqQUgABKArQcgAgEOEoCtDAcDEk0SURUSVQES
WQQAAQEOByADAQ4OEkkGIAEBEoC9ByABEoDBElEFIAASgMkHFRKAzQESWQggABUSVQETAAYVElUB
ElkEIAATAAUgABKA1QMgAA4FBwICEl0KIAMBDhGA4RGA5QgAARKA6RKA7Qi3elxWGTTgiQiJhF3N
gIDMkQhLAfpuNNt3qwgEpZypsCc4MAg/d/63b/DZoQMGEhQDBhIYAwYSDAMGEnUDBhJ9BAYSgIED
BhIgAwYSSQQgAQECBSABARFxCyAEAQgdCB0SaRJtBSABARJ1BAAAEn0FAAASgIEGAAEBEoCBBAAA
EiADAAABAygADgMoAAIEKAARcQQIABJ9BQgAEoCBBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzA5OGM5M2VhMTNkNzQ0NzNhNmY0NzY3
N2NiYjU1MjFiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAAAAAAAAAAAAAAAAAAgAAABwBAAAgOwAAIB0AAFJTRFMAAAAAAAAA
AAAAAAAAAAAAAQAAAEM6XFVzZXJzXGJyZXpcQXBwRGF0YVxMb2NhbFxUZW1wXHZzdGFcMGYxYjZi
YjQyZjM1NGVjNGJjYzZkY2EyMjAyMTdhNDBcb2JqXFJlbGVhc2VcU0NfMDk4YzkzZWExM2Q3NDQ3
M2E2ZjQ3Njc3Y2JiNTUyMWIucGRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZDwAAAAAAAAAAAAA
fjwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA8AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AMAA5ADgAYwA5ADMAZQBhADEAMwBkADcANAA0ADcAMwBhADYAZgA0ADcANgA3ADcAYwBiAGIA
NQA1ADIAMQBiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwADkAOABjADkAMwBlAGEA
MQAzAGQANwA0ADQANwAzAGEANgBmADQANwA2ADcANwBjAGIAYgA1ADUAMgAxAGIALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAAOQA4AGMA
OQAzAGUAYQAxADMAZAA3ADQANAA3ADMAYQA2AGYANAA3ADYANwA3AGMAYgBiADUANQAyADEAYgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwADkAOABjADkA
MwBlAGEAMQAzAGQANwA0ADQANwAzAGEANgBmADQANwA2ADcANwBjAGIAYgA1ADUAMgAxAGIAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_098c93ea13d74473a6f47677cbb5521b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D14.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;28&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">E6</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[type]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[type]"
                      name="type" />
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[datestart]"
                      dataType="date"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[datestart]"
                      name="datestart" />
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[variety]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[variety]"
                      name="variety" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Sheets Data from Winemaking2017.Paths[Output 0]"
              endId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="280,42"
          Id="Package\Load Sheets Data from Winemaking2017"
          TopLeft="264,121" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Sheets Data from Winemaking2017">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="167,42"
          Id="Package\Load Sheets Data from Winemaking2017\Script Component"
          TopLeft="230,156" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load Sheets Data from Winemaking2017\OLE DB Destination"
          TopLeft="250,307" />
        <EdgeLayout
          Id="Package\Load Sheets Data from Winemaking2017.Paths[Output 0]"
          TopLeft="313.5,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25,109"
              Start="0,0"
              End="25,101.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.5"
                    Point2="0,54.5"
                    Point3="4,54.5" />
                  <mssgle:LineSegment
                    End="21,54.5" />
                  <mssgle:CubicBezierSegment
                    Point1="21,54.5"
                    Point2="25,54.5"
                    Point3="25,58.5" />
                  <mssgle:LineSegment
                    End="25,101.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Sheets Data from Winemaking2017\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>