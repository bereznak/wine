<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/26/2017 5:19:24 PM"
  DTS:CreationName=""
  DTS:CreatorComputerName="BREZVM01"
  DTS:CreatorName="BREZVM01\brez"
  DTS:DTSID="{0DCFE87F-6F9C-42CD-A019-7C85E55F204B}"
  DTS:ExecutableType=""
  DTS:LastModifiedProductVersion="14.0.0800.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="Load_Sheet_Data"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{5A60A588-5654-4C5C-8EE0-0EFD9198B0A3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[bereznak81.database.windows.net.wine.bereznak]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{15A1B582-1633-4FA0-90AA-35E5E95843C2}"
      DTS:ObjectName="bereznak81.database.windows.net.wine.bereznak">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=bereznak81.database.windows.net;User ID=bereznak;Initial Catalog=wine;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAKtkDavKUP0m0SpKDyf2ihgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAvYBNQljm3wNS5QU/wx9FgYcKyaaac0wbCgY1s81PThQAAAAAOgAAAAAIAACAAAACPOmD7B2KwPhBvkh6VXa+LNqV7Pr7z1bMGOPK0HQUo6CAAAACm9r2LMR5lfL8Mfsoup4WZbavlEeYNrgPe6MyICQdVsUAAAABUJHXQMzXnfRfJ3wG2JdCIs3QwoXiOy2q6T+IexhHpZntraLGdAm3HgrBA9T1z4YBqeRtIx5y2LF3HH1pbMG3c</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Sheets Data from Winemaking2017"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9F5113B8-CCE0-445D-8CA6-848E86B7DBE8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Sheets Data from Winemaking2017"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Batches]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[bereznak81.database.windows.net.wine.bereznak]"
                  connectionManagerRefId="Package.ConnectionManagers[bereznak81.database.windows.net.wine.bereznak]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[type]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="type"
                      externalMetadataColumnId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[type]" />
                    <inputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[datestart]"
                      cachedDataType="date"
                      cachedName="datestart"
                      externalMetadataColumnId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[datestart]"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[datestart]" />
                    <inputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[variety]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="variety"
                      externalMetadataColumnId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[variety]"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[variety]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[variety]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="variety" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[datestart]"
                      dataType="dbDate"
                      name="datestart" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="type" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Qty]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Qty" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Yield]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Yield" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SGo]"
                      dataType="numeric"
                      name="SGo"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SGadj]"
                      dataType="numeric"
                      name="SGadj"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Brix]"
                      dataType="numeric"
                      name="Brix"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[pH]"
                      dataType="numeric"
                      name="pH"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TA]"
                      dataType="numeric"
                      name="TA"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Yeast]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Yeast" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[pitchtime]"
                      dataType="dbTimeStamp"
                      name="pitchtime" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SGf]"
                      dataType="numeric"
                      name="SGf"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[abv]"
                      dataType="numeric"
                      name="abv"
                      precision="18" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Sheets Data from Winemaking2017\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Google.GData.Client;
using Google.GData.Extensions;
using Google.GData.Spreadsheets;
using Google.Apis.Auth.OAuth2;
using System.Windows.Forms;

//namespace GoogleSpreadsheet
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string asdf = "asdf";

class GoogleOAutho2
    {
        private static String folderName = "crazy.ivan";
        
        static void Main(string[] args)
        {
            ////////////////////////////////////////////////////////////////////////////
            // STEP 1: Configure how to perform OAuth 2.0
            ////////////////////////////////////////////////////////////////////////////

            // TODO: Update the following information with that obtained from
            // https://code.google.com/apis/console. After registering
            // your application, these will be provided for you.

            string CLIENT_ID = "540383043036-1sjgcnsjp63udcm26lqjo25baf0qsf8g.apps.googleusercontent.com";

            // This is the OAuth 2.0 Client Secret retrieved
            // above.  Be sure to store this value securely.  Leaking this
            // value would enable others to act on behalf of your application!
            string CLIENT_SECRET = "xPHhXdPBmAeOUNZRjfIAvCXN";

            // Space separated list of scopes for which to request access.
            string SCOPE = "https://www.googleapis.com/auth/drive https://spreadsheets.google.com/feeds https://docs.google.com/feeds";

            // This is the Redirect URI for installed applications.
            // If you are building a web application, you have to set your
            // Redirect URI at https://code.google.com/apis/console.
            string REDIRECT_URI = "urn:ietf:wg:oauth:2.0:oob";

            string TOKEN_TYPE = "refresh";

            ////////////////////////////////////////////////////////////////////////////
            // STEP 2: Set up the OAuth 2.0 object
            ////////////////////////////////////////////////////////////////////////////

            // OAuth2Parameters holds all the parameters related to OAuth 2.0.
            OAuth2Parameters parameters = new OAuth2Parameters();

            // Set your OAuth 2.0 Client Id (which you can register at
            // https://code.google.com/apis/console).
            parameters.ClientId = CLIENT_ID;

            // Set your OAuth 2.0 Client Secret, which can be obtained at
            // https://code.google.com/apis/console.
            parameters.ClientSecret = CLIENT_SECRET;

            // Set your Redirect URI, which can be registered at
            // https://code.google.com/apis/console.
            parameters.RedirectUri = REDIRECT_URI;

            ////////////////////////////////////////////////////////////////////////////
            // STEP 3: Get the Authorization URL
            ////////////////////////////////////////////////////////////////////////////

            // Set the scope for this particular service.
            parameters.Scope = SCOPE;

            parameters.AccessType = "offline"; // IMPORTANT and was missing in the original

            parameters.TokenType = TOKEN_TYPE; // IMPORTANT and was missing in the original


            // Get the authorization url.  The user of your application must visit
            // this url in order to authorize with Google.  If you are building a
            // browser-based application, you can redirect the user to the authorization
            // url.
            string authorizationUrl = OAuthUtil.CreateOAuth2AuthorizationUrl(parameters);
            Console.WriteLine(authorizationUrl);
            Console.WriteLine("Please visit the URL above to authorize your OAuth "
              + "request token.  Once that is complete, type in your access code to "
              + "continue...");
            parameters.AccessCode = Console.ReadLine();

            ////////////////////////////////////////////////////////////////////////////
            // STEP 4: Get the Access Token
            ////////////////////////////////////////////////////////////////////////////

            // Once the user authorizes with Google, the request token can be exchanged
            // for a long-lived access token.  If you are building a browser-based
            // application, you should parse the incoming request token from the url and
            // set it in OAuthParameters before calling GetAccessToken().
            OAuthUtil.GetAccessToken(parameters);
            string accessToken = parameters.AccessToken;
            string refreshToken = parameters.RefreshToken;
            Console.WriteLine("OAuth Access Token: " + accessToken + "\n");
            Console.WriteLine("OAuth Refresh Token: " + refreshToken + "\n");

            ////////////////////////////////////////////////////////////////////////////
            // STEP 5: Make an OAuth authorized request to Google
            ////////////////////////////////////////////////////////////////////////////

            // Initialize the variables needed to make the request
            GOAuth2RequestFactory requestFactory =
                new GOAuth2RequestFactory(null, "MySpreadsheetIntegration-v1", parameters);
            SpreadsheetsService service = new SpreadsheetsService("MySpreadsheetIntegration-v1");
            service.RequestFactory = requestFactory;

            // Make the request to Google
            // See other portions of this guide for code to put here...

            // Instantiate a SpreadsheetQuery object to retrieve spreadsheets.
            Google.GData.Spreadsheets.SpreadsheetQuery query = new Google.GData.Spreadsheets.SpreadsheetQuery();

            // Make a request to the API and get all spreadsheets.
            SpreadsheetFeed feed = service.Query(query);

            // Iterate through all of the spreadsheets returned
            foreach (SpreadsheetEntry entry in feed.Entries)
            {
                // Print the title of this spreadsheet to the screen
                Console.WriteLine(entry.Title.Text);
            }
            Console.ReadLine();

        }


        // once you copied your access and refresh tokens
        // then you can run this method directly from now on...
        static void MainX(string[] args)
        {
            GOAuth2RequestFactory requestFactory = RefreshAuthenticate();

            SpreadsheetsService service = new SpreadsheetsService("MySpreadsheetIntegration-v1");
            service.RequestFactory = requestFactory;

            // Instantiate a SpreadsheetQuery object to retrieve spreadsheets.
            Google.GData.Spreadsheets.SpreadsheetQuery query = new Google.GData.Spreadsheets.SpreadsheetQuery();

            // Make a request to the API and get all spreadsheets.
            SpreadsheetFeed feed = service.Query(query);

            // Iterate through all of the spreadsheets returned
            foreach (SpreadsheetEntry entry in feed.Entries)
            {
                // Print the title of this spreadsheet to the screen
                Console.WriteLine(entry.Title.Text);
            }
            Console.ReadLine();



            GOAuth2RequestFactory RefreshAuthenticate()
            {
                OAuth2Parameters parameters = new OAuth2Parameters()
                {
                    RefreshToken = "the_refresh_token_you_copied_from_the_CLI_running_the_first_method",
                    AccessToken = "the_access_token_you_copied_from_the_CLI_running_the_first_method",
                    ClientId = "your_client_id",
                    ClientSecret = "your_dirty_little_secret",
                    Scope = "https://www.googleapis.com/auth/drive https://spreadsheets.google.com/feeds",
                    AccessType = "offline",
                    TokenType = "refresh"
                };
                string authUrl = OAuthUtil.CreateOAuth2AuthorizationUrl(parameters);
                return new GOAuth2RequestFactory(null, "evilspeculator", parameters);
            }
        }
    }
}

internal class asdf
{
}


//[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
//public class ScriptMain : UserComponent
//{
//    SpreadsheetsService service;
//    WorksheetQuery query;
//    WorksheetFeed feed;
//    AtomEntry sheet;
//    AtomLink link;
//    ListQuery listQuery;
//    ListFeed listFeed;
//    public override void PreExecute()
//    {
//        base.PreExecute();
//        //service = new SpreadsheetsService("ETL Pull");
//        ////Username and password
//        //service.setUserCredentials("someone@google.com", "*******");
//        ////your spreadsheet key goes in next line
//        //query = new WorksheetQuery("0Algddiszrz0mdFo0akcwbEhFVVhIaGRFX3M4MF84LWc", "private", "full");
//        //feed = service.Query(query);
//        //sheet = feed.Entries[0];
//        //link = sheet.Links.FindService(GDataSpreadsheetsNameTable.ListRel, null);
//        //listQuery = new ListQuery(link.HRef.ToString());
//        //listFeed = service.Query(listQuery);
//}
//public override void PostExecute()
//{
//    base.PostExecute();
//}
//public override void CreateNewOutputRows()
//{
//    foreach (ListEntry row in listFeed.Entries)
//    {
//        if (row.Elements[0].Value == "") break;
//        Output0Buffer.AddRow();
//        Output0Buffer.variety = row.Elements[0].Value;
//        Output0Buffer.datestart = DateTime.Parse(row.Elements[1].Value);
//        Output0Buffer.type = row.Elements[2].Value;
//    }
//}
//}]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_098c93ea13d74473a6f47677cbb5521b.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{80EE3249-8007-4D1E-BA47-74ABD452086D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_098c93ea13d74473a6f47677cbb5521b</RootNamespace>
    <AssemblyName>SC_098c93ea13d74473a6f47677cbb5521b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Google.Apis">
      <HintPath>C:\Users\brez\.nuget\packages\Google.Apis\1.29.1\lib\net45\Google.Apis.dll</HintPath>
    </Reference>
    <Reference Include="Google.Apis.Auth, Version=1.29.1.0, Culture=neutral, PublicKeyToken=4b01fa6e34db77ab, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\brez\.nuget\packages\Google.Apis.Auth\1.29.1\lib\net45\Google.Apis.Auth.dll</HintPath>
    </Reference>
    <Reference Include="Google.Apis.Core, Version=1.29.1.0, Culture=neutral, PublicKeyToken=4b01fa6e34db77ab, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\brez\.nuget\packages\Google.Apis.Core\1.29.1\lib\net45\Google.Apis.Core.dll</HintPath>
    </Reference>
    <Reference Include="Google.GData.Client, Version=2.2.0.0, Culture=neutral, PublicKeyToken=04a59ca9b0273830, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Google\Google Data API SDK\Redist\Google.GData.Client.dll</HintPath>
    </Reference>
    <Reference Include="Google.GData.Extensions, Version=2.2.0.0, Culture=neutral, PublicKeyToken=0b4c5df2ebf20876, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Google\Google Data API SDK\Redist\Google.GData.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="Google.GData.Spreadsheets, Version=2.2.0.0, Culture=neutral, PublicKeyToken=3f77feb76ff0d9a1, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Google\Google Data API SDK\Redist\Google.GData.Spreadsheets.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\brez\.nuget\packages\Newtonsoft.Json\10.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String type
    {
        set
        {
            this[0] = value;
        }
    }
    public bool type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime datestart
    {
        set
        {
            this[1] = value;
        }
    }
    public bool datestart_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String variety
    {
        set
        {
            this[2] = value;
        }
    }
    public bool variety_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Settings.get_Default():SC_098c93ea13d74473a6f47677cbb5521b.Properties.Sett" +
    "ings")]

namespace SC_098c93ea13d74473a6f47677cbb5521b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_098c93ea13d74473a6f47677cbb5521b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_098c93ea13d74473a6f47677cbb5521b</msb:DisplayName>
		<msb:ProjectId>{544D76A3-C3F1-48CC-8556-48689B83C1ED}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_098c93ea13d74473a6f47677cbb5521b.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:Breakpoint Include="ae4c8a1bd19a46ba8460dfcb4f4c8032">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>19</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="180a23d743e94f0f85ff3af741da397b">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>5</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>15</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_098c93ea13d74473a6f47677cbb5521b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_098c93ea13d74473a6f47677cbb5521b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_098c93ea13d74473a6f47677cbb5521b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_098c93ea13d74473a6f47677cbb5521b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_098c93ea13d74473a6f47677cbb5521b.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMxOzVkAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAA3kAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIxAAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAABUPwAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
QAAAAAAAAEgAAAACAAUAWCQAAEQaAAABAAAAAAAAAJw+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEoCcgEAAHB9AQAABAIoDQAABioeAigQAAAKKioCAwQFKBEA
AAoqJgIWAygSAAAKKloDLAgCFigTAAAKKnILAABwcxQAAAp6OgIXA4wYAAABKBIAAAoqWgMsCAIX
KBMAAAoqcgsAAHBzFAAACnomAhgDKBIAAAoqWgMsCAIYKBMAAAoqcgsAAHBzFAAACnoeAigVAAAK
Kh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzEgAABn0CAAAEAgJzEwAABn0DAAAEKgYqbgJ7BAAA
BCwSAnsEAAAEbwsAAAYCFH0EAAAEKhMwBQBJAAAAAQAAERYKKy4EBpQOBHKoAABwKBkAAAozGQIF
BpoCBAaUKBoAAAoOBHMDAAAGfQQAAAQGF1gKBgMyzgJvEQAABgJvDgAABgIoDwAABio6AigQAAAK
AgN9BQAABCo6AigQAAAKAgN9BgAABCqufgcAAAQtHnK6AABw0AgAAAIoGwAACm8cAAAKcx0AAAqA
BwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoeAigeAAAKKi5zGQAABoAJAAAEKgAAABsw
AwA4AQAAAgAAEXIsAQBwCnK/AQBwC3LxAQBwDHLGAgBwDXL6AgBwEwRzHwAAChMFEQUGbyAAAAoR
BQdvIQAAChEFCW8iAAAKEQUIbyMAAAoRBXIKAwBwbyQAAAoRBREEbyUAAAoRBSgmAAAKKCcAAApy
GgMAcCgnAAAKEQUoKAAACm8pAAAKEQUoKgAAChEFbysAAAoTBhEFbywAAAoTB3IfBABwEQZySQQA
cCgtAAAKKCcAAApyTQQAcBEHckkEAHAoLQAACignAAAKFHJ5BABwEQVzLgAAChMIcnkEAHBzLwAA
CiURCG8wAAAKczEAAAoTCREJbzIAAApvMwAACm80AAAKEworGxEKbzUAAAp0LgAAAW82AAAKbzcA
AAooJwAAChEKbzgAAAot3N4MEQosBxEKbzkAAArcKCgAAAomKgEQAAACAP0AKCUBDAAAAAAbMAMA
ZQAAAAMAABEoHwAABgpyeQQAcHMvAAAKJQZvMAAACnMxAAAKCwdvMgAACm8zAAAKbzQAAAoMKxoI
bzUAAAp0LgAAAW82AAAKbzcAAAooJwAACghvOAAACi3e3goILAYIbzkAAArcKCgAAAomKgAAAAEQ
AAACAC4AJlQACgAAAAAucrEEAHCACgAABCoTMAMAZwAAAAQAABFzHwAACiVyxwQAcG86AAAKJXJO
BQBwbzsAAAolctMFAHBvIAAACiVy8QUAcG8hAAAKJXIjBgBwbyMAAAolcgoDAHBvJAAACiVy+gIA
cG8lAAAKCgYoJgAACiYUcrwGAHAGcy4AAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAAGQHAAAjfgAA0AcAAEAJAAAjU3RyaW5ncwAAAAAQEQAA3AYAACNVUwDsFwAAEAAAACNH
VUlEAAAA/BcAAEgCAAAjQmxvYgAAAAAAAAACAAABVxWiCQkDAAAA+gEzABYAAAEAAAAxAAAACgAA
AAoAAAAfAAAAEgAAADsAAAARAAAABAAAAAMAAAAJAAAACgAAAAIAAAABAAAABgAAAAEAAAABAAAA
AAA0BAEAAAAAAAYAJgNBBgYAugNBBgYAcgIuBg8AtQYAAAYAnwJbBQYACQNbBQYA6gJbBQYAoQNb
BQYARgNbBQYAXwNbBQYAtgJbBQYA0QLjAwoAegOMAQYAtwfCBA4AYwf8Bw4A2Qj8BxIAyAh0BwYA
NwCbAA4AFwn8BwYAOgJBBgoA3AWMARYAzQWMAQoApwWMAQYAcAHCBAoALgiMAQYAVQIuBgYA7QVh
BgYAmwVGBRoAJQIUBBoAhgIUBBoABQIxBQYAgQXCBAYAzwHCBAYALwHCBAYAvwhbBQ4AKgT8BwYA
UwHCBAYA/QPCBBIA8AB0Bw4A/AD8Bw4AAgn8BxIAzAB0Bw4AwwD8Bw4AbQX8Bw4AIgD8BxIAIQl0
Bw4Avgf8BwYA/QU8BwYAIwHCBAAAAABTAAAAAAABAAEAAQAQACYFAAAUAAEAAQAAABAA3gMAADkA
AgACAAEAEAC/BQAAVQACAAMAAQAQABAIAABlAAIADQABABAATwcAADkABQASAAEAEAD/BgAAOQAG
ABMAAAAQAGgG0AY5AAcAFAAAARAALgfQBn0ACQAYAAMAEABFAAAAOQAKABsAAQDeAwMBBgBPBwYB
BgD/BgoBBgC/BQ4BAQAeCBIBAQAeCBIBEQDJBBYBEQD1ARoBEQAEAR4BEQBlAQMBUCAAAAAAhhgX
BgYAAQBjIAAAAACGGBcGBgABAGsgAAAAAIYYFwYbAAEAdiAAAAAAhgjUARAABACAIAAAAACGCFwE
IgEFAJcgAAAAAIYIZwgnAQYApiAAAAAAhghsBCIBBwC9IAAAAACGCDIJEAAIAMcgAAAAAIYIgQQi
AQkA3iAAAAAAhgC0CAYACgDmIAAAAACGAOEHBgAKAO4gAAAAAIYA5AcrAAoA9iAAAAAAhhgXBgYA
CgAWIQAAAADGAY4HBgAKABghAAAAAIEA3AAGAAoANCEAAAAAxgCWCC0BCgAWIQAAAADGAZwHBgAO
AIkhAAAAAIYYFwY5AQ4AmCEAAAAAhhgXBjkBDwBjIAAAAACDGBcGBgAQAKchAAAAAJMI6QU/ARAA
0yEAAAAAkwjdAUQBEADaIQAAAACTCOkBSQEQAOIhAAAAAJYI8AdPAREA6SEAAAAAhhgXBgYAEQDx
IQAAAACRGB0GVAERAAAiAAAAAJEALAVYAREAVCMAAAAAkQBoAFgBEgBjIAAAAACGGBcGBgATANgj
AAAAAJEYHQZUARMA5CMAAAAAkwABAF4BEwAAAAEA4gUAAAIACQcAAAMAtQUAAAEA2AMAAAEA2AMA
AAEA2AMAAAEA2AMAAAEA2AMAAAEA2AMAAAEAlAcAAAIAJAYAAAMAWwcAAAQAtQUAAAEANAgAAAEA
NAgAAAEA2AMAAAEANwcAAAEANwcJABcGAQARABcGBgAZABcGCgApABcGEAAxABcGEAA5ABcGEABB
ABcGEABJABcGEABRABcGEABZABcGEABhABcGEABpABcGBgChABcGBgDRABcGBgDxABcGFQBxABcG
BgCpABcGGwCpALkEJQCpAJQEAQABARcGEACpALQIBgCpAOEHBgCpAOQHKwDJABcGBgDJAFwAMwDJ
AB0HOgAJAUEBQAAJAbsISQDZABcGTwD5ABcGBgB5ABcGBgB5ALYAEAB5ANAHEAB5AAQEEAB5AK0B
EAB5AMUBEAB5ALcBEAAhAZwEbQApAYIBcwApAXkBeAB5ABQBEAAhARcFfAB5APcEggB5ANUEggAx
AbAHhgCBABcGjQA5ARcGEABBAe8IlQCJABcGBgA5AdMInABZAcQGpAAMAAkGsgAUAD4IwgCZAFsB
xwB5AasIggCBAaIIKwCJAR0CBgB5AOYEEAB5AAcFEAAuAAsAfwEuABMAiAEuABsApwEuACMAsAEu
ACsA2QEuADMA2QEuADsA2QEuAEMAsAEuAEsA3wEuAFMA2QEuAFsA9gFDAGMAQALpAHsApwEDAXMA
QAIJAXsApwEhAWsAQALgA2sAQAIvAFcAzQDaAAQAAQAIAAcACQAJAAAA2AFjAQAAYARnAQAAawhr
AQAAcARnAQAANgljAQAAhQRnAQAA7QVwAQAA/QF1AQAA9Ad6AQEABAADAAEABQAFAAEABgAHAAEA
BwAJAAEACAALAAEACQANAAIAFQAPAAIAFgARAAEAFwARAAIAGAATAKoAuwAEgAAAAQAAAAAAAAAA
AAAAAABuAAAABAAAAAAAAAAAAAAA3wCSAAAAAAAOAAAAAAAAAAAAAADoAEoIAAAAAAIAAgAAAAAA
AAAAAPEA/AcAAAAAAgACAAAAAAAAAAAA+gB0BwAAAAAOAAAAAAAAAAAAAADoAHUIAAAAAAQAAAAA
AAAAAAAAAN8AwgQAAAAAAAAAAAEAAAByBgAACgACAAAAADxNYWluWD5nX19SZWZyZXNoQXV0aGVu
dGljYXRlMl8wAEF0b21Db2xsZWN0aW9uQmFzZWAxAElFbnVtZXJhdG9yYDEAR29vZ2xlT0F1dGhv
MgA8TW9kdWxlPgBHZXRPdXRwdXRJRABNYWluWABTQ18wOThjOTNlYTEzZDc0NDczYTZmNDc2Nzdj
YmI1NTIxYgBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBzZXRfQ2xpZW50SWQA
QXRvbUZlZWQAU3ByZWFkc2hlZXRGZWVkAE1hcmtPdXRwdXRzRmluaXNoZWQAU3ByZWFkc2hlZXRz
U2VydmljZQBkZWZhdWx0SW5zdGFuY2UAc2V0X0FjY2Vzc0NvZGUASURpc3Bvc2FibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQ29uc29sZQBnZXRfVGl0bGUAZm9sZGVyTmFt
ZQBEYXRlVGltZQBSZWFkTGluZQBXcml0ZUxpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAc2V0X1Njb3BlAHNldF9Ub2tlblR5cGUAc2V0X0FjY2Vzc1R5cGUAc2V0X3R5cGUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAdmFsdWUAYXNk
ZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBzZXRfUmVkaXJlY3RVcmkAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAE9BdXRoVXRpbABTQ18wOThjOTNlYTEzZDc0NDczYTZmNDc2NzdjYmI1
NTIxYi5kbGwAc2V0X3R5cGVfSXNOdWxsAHNldF9kYXRlc3RhcnRfSXNOdWxsAHNldF92YXJpZXR5
X0lzTnVsbABTZXROdWxsAENyZWF0ZU9BdXRoMkF1dGhvcml6YXRpb25VcmwAc2V0X0l0ZW0AU3lz
dGVtAHJlc291cmNlTWFuAGdldF9SZWZyZXNoVG9rZW4Ac2V0X1JlZnJlc2hUb2tlbgBnZXRfQWNj
ZXNzVG9rZW4Ac2V0X0FjY2Vzc1Rva2VuAEdldEFjY2Vzc1Rva2VuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQXRv
bUVudHJ5Q29sbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEN1bHR1cmVJbmZvAE91
dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3Rv
cgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMDk4YzkzZWExM2Q3NDQ3M2E2ZjQ3Njc3
Y2JiNTUyMWIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdl
dF9FbnRyaWVzAFNDXzA5OGM5M2VhMTNkNzQ0NzNhNmY0NzY3N2NiYjU1MjFiLlByb3BlcnRpZXMA
VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBh
cmdzAFN5c3RlbS5Db2xsZWN0aW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAE9BdXRoMlBhcmFtZXRl
cnMAR29vZ2xlLkdEYXRhLlNwcmVhZHNoZWV0cwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1
dFJvd3MAQ29uY2F0AE9iamVjdABBdG9tVGV4dENvbnN0cnVjdABzZXRfQ2xpZW50U2VjcmV0AFNl
dEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AEdvb2dsZS5HRGF0YS5DbGllbnQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQAc2V0X2RhdGVzdGFydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABQcmltZU91dHB1dABNb3ZlTmV4dABnZXRfVGV4dABBZGRSb3cAZ2V0X0Fzc2VtYmx5
AFNwcmVhZHNoZWV0UXVlcnkAR09BdXRoMlJlcXVlc3RGYWN0b3J5AHNldF9SZXF1ZXN0RmFjdG9y
eQBJR0RhdGFSZXF1ZXN0RmFjdG9yeQBBdG9tRW50cnkAU3ByZWFkc2hlZXRFbnRyeQBzZXRfdmFy
aWV0eQAAAAAJYQBzAGQAZgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBu
AG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAA
YQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBk
AC4AABFPAHUAdABwAHUAdAAgADAAAHFTAEMAXwAwADkAOABjADkAMwBlAGEAMQAzAGQANwA0ADQA
NwAzAGEANgBmADQANwA2ADcANwBjAGIAYgA1ADUAMgAxAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAICRNQA0ADAAMwA4ADMAMAA0ADMAMAAzADYALQAxAHMAagBn
AGMAbgBzAGoAcAA2ADMAdQBkAGMAbQAyADYAbABxAGoAbwAyADUAYgBhAGYAMABxAHMAZgA4AGcA
LgBhAHAAcABzAC4AZwBvAG8AZwBsAGUAdQBzAGUAcgBjAG8AbgB0AGUAbgB0AC4AYwBvAG0AATF4
AFAASABoAFgAZABQAEIAbQBBAGUATwBVAE4AWgBSAGoAZgBJAEEAdgBDAFgATgAAgNNoAHQAdABw
AHMAOgAvAC8AdwB3AHcALgBnAG8AbwBnAGwAZQBhAHAAaQBzAC4AYwBvAG0ALwBhAHUAdABoAC8A
ZAByAGkAdgBlACAAaAB0AHQAcABzADoALwAvAHMAcAByAGUAYQBkAHMAaABlAGUAdABzAC4AZwBv
AG8AZwBsAGUALgBjAG8AbQAvAGYAZQBlAGQAcwAgAGgAdAB0AHAAcwA6AC8ALwBkAG8AYwBzAC4A
ZwBvAG8AZwBsAGUALgBjAG8AbQAvAGYAZQBlAGQAcwAAM3UAcgBuADoAaQBlAHQAZgA6AHcAZwA6
AG8AYQB1AHQAaAA6ADIALgAwADoAbwBvAGIAAA9yAGUAZgByAGUAcwBoAAAPbwBmAGYAbABpAG4A
ZQAAgQNQAGwAZQBhAHMAZQAgAHYAaQBzAGkAdAAgAHQAaABlACAAVQBSAEwAIABhAGIAbwB2AGUA
IAB0AG8AIABhAHUAdABoAG8AcgBpAHoAZQAgAHkAbwB1AHIAIABPAEEAdQB0AGgAIAByAGUAcQB1
AGUAcwB0ACAAdABvAGsAZQBuAC4AIAAgAE8AbgBjAGUAIAB0AGgAYQB0ACAAaQBzACAAYwBvAG0A
cABsAGUAdABlACwAIAB0AHkAcABlACAAaQBuACAAeQBvAHUAcgAgAGEAYwBjAGUAcwBzACAAYwBv
AGQAZQAgAHQAbwAgAGMAbwBuAHQAaQBuAHUAZQAuAC4ALgAAKU8AQQB1AHQAaAAgAEEAYwBjAGUA
cwBzACAAVABvAGsAZQBuADoAIAAAAwoAACtPAEEAdQB0AGgAIABSAGUAZgByAGUAcwBoACAAVABv
AGsAZQBuADoAIAAAN00AeQBTAHAAcgBlAGEAZABzAGgAZQBlAHQASQBuAHQAZQBnAHIAYQB0AGkA
bwBuAC0AdgAxAAEVYwByAGEAegB5AC4AaQB2AGEAbgAAgIV0AGgAZQBfAHIAZQBmAHIAZQBzAGgA
XwB0AG8AawBlAG4AXwB5AG8AdQBfAGMAbwBwAGkAZQBkAF8AZgByAG8AbQBfAHQAaABlAF8AQwBM
AEkAXwByAHUAbgBuAGkAbgBnAF8AdABoAGUAXwBmAGkAcgBzAHQAXwBtAGUAdABoAG8AZAAAgIN0
AGgAZQBfAGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuAF8AeQBvAHUAXwBjAG8AcABpAGUAZABfAGYA
cgBvAG0AXwB0AGgAZQBfAEMATABJAF8AcgB1AG4AbgBpAG4AZwBfAHQAaABlAF8AZgBpAHIAcwB0
AF8AbQBlAHQAaABvAGQAAB15AG8AdQByAF8AYwBsAGkAZQBuAHQAXwBpAGQAADF5AG8AdQByAF8A
ZABpAHIAdAB5AF8AbABpAHQAdABsAGUAXwBzAGUAYwByAGUAdAAAgJdoAHQAdABwAHMAOgAvAC8A
dwB3AHcALgBnAG8AbwBnAGwAZQBhAHAAaQBzAC4AYwBvAG0ALwBhAHUAdABoAC8AZAByAGkAdgBl
ACAAaAB0AHQAcABzADoALwAvAHMAcAByAGUAYQBkAHMAaABlAGUAdABzAC4AZwBvAG8AZwBsAGUA
LgBjAG8AbQAvAGYAZQBlAGQAcwAAHWUAdgBpAGwAcwBwAGUAYwB1AGwAYQB0AG8AcgAAAAC1Wll6
VZlIRY8PLrJnhQrJAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1CSADARJZHQgSXQUgAgEIHAMg
AAIDBwEIBgACCBJdDgUgAR0ICAgAARKAhRGAiQUgABKAjQcgAgEOEoCNFQcLDg4ODg4SPQ4OEkES
RRUSSQESTQUAAQ4SPQQAAQEOAwAADgUAAQESPQMgAA4GAAMODg4OByADAQ4OEj0GIAEBEoClByAB
EoCpEkUFIAASgLEHFRKAtQESTQggABUSSQETAAYVEkkBEk0EIAATAAUgABKAvQwHAxJBEkUVEkkB
Ek0EBwESPQi3elxWGTTgiQiJhF3NgIDMkQgEpZypsCc4MAg/d/63b/DZoQIGDgMGEhgDBhIcAwYS
EAMGEmUDBhJtAwYScQMGEiQEIAEBAgUgAQERYQsgBAEIHQgdElkSXQUgAQESZQQAABJtBAAAEnEF
AAEBEnEEAAASJAMAAAEFAAEBHQ4EAAASQQMoAA4DKAACBCgAEWEECAASbQQIABJxBAgAEiQIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzA5OGM5
M2VhMTNkNzQ0NzNhNmY0NzY3N2NiYjU1MjFiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAAAAAAAAAAAAAAAAAAgAAABwB
AABwPwAAcCEAAFJTRFMAAAAAAAAAAAAAAAAAAAAAAQAAAEM6XFVzZXJzXGJyZXpcQXBwRGF0YVxM
b2NhbFxUZW1wXHZzdGFcY2M1NTM0MmNlMzU2NDcyYzg5NzY4Yzk2MGVhMTA0ZmZcb2JqXFJlbGVh
c2VcU0NfMDk4YzkzZWExM2Q3NDQ3M2E2ZjQ3Njc3Y2JiNTUyMWIucGRiAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAtEAAAAAAAAAAAAAAzkAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
ADAAOQA4AGMAOQAzAGUAYQAxADMAZAA3ADQANAA3ADMAYQA2AGYANAA3ADYANwA3AGMAYgBiADUA
NQAyADEAYgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAA5ADgAYwA5ADMAZQBhADEA
MwBkADcANAA0ADcAMwBhADYAZgA0ADcANgA3ADcAYwBiAGIANQA1ADIAMQBiAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwADkAOABjADkA
MwBlAGEAMQAzAGQANwA0ADQANwAzAGEANgBmADQANwA2ADcANwBjAGIAYgA1ADUAMgAxAGIALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAA5ADgAYwA5ADMA
ZQBhADEAMwBkADcANAA0ADcAMwBhADYAZgA0ADcANgA3ADcAYwBiAGIANQA1ADIAMQBiAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADgMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_098c93ea13d74473a6f47677cbb5521b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D14.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;19&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D14.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;15&lt;/FileLine&gt;
&lt;FileColumn&gt;5&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">E6</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[type]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[type]"
                      name="type" />
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[datestart]"
                      dataType="date"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[datestart]"
                      name="datestart" />
                    <outputColumn
                      refId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[variety]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0].Columns[variety]"
                      name="variety" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Sheets Data from Winemaking2017.Paths[Output 0]"
              endId="Package\Load Sheets Data from Winemaking2017\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Load Sheets Data from Winemaking2017\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="280,42"
          Id="Package\Load Sheets Data from Winemaking2017"
          TopLeft="264,121" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Sheets Data from Winemaking2017">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="167,42"
          Id="Package\Load Sheets Data from Winemaking2017\Script Component"
          TopLeft="230,156" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load Sheets Data from Winemaking2017\OLE DB Destination"
          TopLeft="250,307" />
        <EdgeLayout
          Id="Package\Load Sheets Data from Winemaking2017.Paths[Output 0]"
          TopLeft="313.5,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25,109"
              Start="0,0"
              End="25,101.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.5"
                    Point2="0,54.5"
                    Point3="4,54.5" />
                  <mssgle:LineSegment
                    End="21,54.5" />
                  <mssgle:CubicBezierSegment
                    Point1="21,54.5"
                    Point2="25,54.5"
                    Point3="25,58.5" />
                  <mssgle:LineSegment
                    End="25,101.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Sheets Data from Winemaking2017\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>